<
   ir_version: 8,
   opset_import: ["" : 17],
   producer_name: "pytorch",
   producer_version: "2.3.1"
>
main_graph (float[input_1_dynamic_axes_1,3,32,32] input_1, float[3,3,1,1] model_0_model_weight, float[3] model_0_model_bias, float[64,3,7,7] model_1_model_Conv_weight, float[64] model_1_model_Conv_bias, float[64,64,3,3] model_1_model_Conv_1_weight, float[64] model_1_model_Conv_1_bias, float[64,64,3,3] model_1_model_Conv_2_weight, float[64] model_1_model_Conv_2_bias, float[64,64,3,3] model_1_model_Conv_3_weight, float[64] model_1_model_Conv_3_bias, float[64,64,3,3] model_1_model_Conv_4_weight, float[64] model_1_model_Conv_4_bias, float[128,64,3,3] model_1_model_Conv_5_weight, float[128] model_1_model_Conv_5_bias, float[128,128,3,3] model_1_model_Conv_6_weight, float[128] model_1_model_Conv_6_bias, float[128,64,1,1] model_1_model_Conv_7_weight, float[128] model_1_model_Conv_7_bias, float[128,128,3,3] model_1_model_Conv_8_weight, float[128] model_1_model_Conv_8_bias, float[128,128,3,3] model_1_model_Conv_9_weight, float[128] model_1_model_Conv_9_bias, float[256,128,3,3] model_1_model_Conv_10_weight, float[256] model_1_model_Conv_10_bias, float[256,256,3,3] model_1_model_Conv_11_weight, float[256] model_1_model_Conv_11_bias, float[256,128,1,1] model_1_model_Conv_12_weight, float[256] model_1_model_Conv_12_bias, float[256,256,3,3] model_1_model_Conv_13_weight, float[256] model_1_model_Conv_13_bias, float[256,256,3,3] model_1_model_Conv_14_weight, float[256] model_1_model_Conv_14_bias, float[512,256,3,3] model_1_model_Conv_15_weight, float[512] model_1_model_Conv_15_bias, float[512,512,3,3] model_1_model_Conv_16_weight, float[512] model_1_model_Conv_16_bias, float[512,256,1,1] model_1_model_Conv_17_weight, float[512] model_1_model_Conv_17_bias, float[512,512,3,3] model_1_model_Conv_18_weight, float[512] model_1_model_Conv_18_bias, float[512,512,3,3] model_1_model_Conv_19_weight, float[512] model_1_model_Conv_19_bias, float[18,512] model_1_model_Gemm_weight, float[18] model_1_model_Gemm_bias, float[10,18] model_2_model_weight, float[10] model_2_model_bias) => (float[gemm_output_0001_dynamic_axes_1,10] output_var) {
   conv_output_0000 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [1, 1], pads_ ints = [0, 0, 0, 0], strides_ ints = [1, 1]> (input_1, model_0_model_weight, model_0_model_bias)
   conv_output_0001 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [7, 7], pads_ ints = [3, 3, 3, 3], strides_ ints = [2, 2]> (conv_output_0000, model_1_model_Conv_weight, model_1_model_Conv_bias)
   relu_output_0000 = Relu (conv_output_0001)
   maxpool_output_0000 = MaxPool <ceil_mode_ int = 0, dilations_ ints = [1, 1], kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [2, 2]> (relu_output_0000)
   conv_output_0002 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (maxpool_output_0000, model_1_model_Conv_1_weight, model_1_model_Conv_1_bias)
   relu_output_0001 = Relu (conv_output_0002)
   conv_output_0003 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0001, model_1_model_Conv_2_weight, model_1_model_Conv_2_bias)
   add_output_0000 = Add (conv_output_0003, maxpool_output_0000)
   relu_output_0002 = Relu (add_output_0000)
   conv_output_0004 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0002, model_1_model_Conv_3_weight, model_1_model_Conv_3_bias)
   relu_output_0003 = Relu (conv_output_0004)
   conv_output_0005 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0003, model_1_model_Conv_4_weight, model_1_model_Conv_4_bias)
   add_output_0001 = Add (conv_output_0005, relu_output_0002)
   relu_output_0004 = Relu (add_output_0001)
   conv_output_0006 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [2, 2]> (relu_output_0004, model_1_model_Conv_5_weight, model_1_model_Conv_5_bias)
   relu_output_0005 = Relu (conv_output_0006)
   conv_output_0007 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0005, model_1_model_Conv_6_weight, model_1_model_Conv_6_bias)
   conv_output_0008 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [1, 1], pads_ ints = [0, 0, 0, 0], strides_ ints = [2, 2]> (relu_output_0004, model_1_model_Conv_7_weight, model_1_model_Conv_7_bias)
   add_output_0002 = Add (conv_output_0007, conv_output_0008)
   relu_output_0006 = Relu (add_output_0002)
   conv_output_0009 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0006, model_1_model_Conv_8_weight, model_1_model_Conv_8_bias)
   relu_output_0007 = Relu (conv_output_0009)
   conv_output_0010 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0007, model_1_model_Conv_9_weight, model_1_model_Conv_9_bias)
   add_output_0003 = Add (conv_output_0010, relu_output_0006)
   relu_output_0008 = Relu (add_output_0003)
   conv_output_0011 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [2, 2]> (relu_output_0008, model_1_model_Conv_10_weight, model_1_model_Conv_10_bias)
   relu_output_0009 = Relu (conv_output_0011)
   conv_output_0012 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0009, model_1_model_Conv_11_weight, model_1_model_Conv_11_bias)
   conv_output_0013 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [1, 1], pads_ ints = [0, 0, 0, 0], strides_ ints = [2, 2]> (relu_output_0008, model_1_model_Conv_12_weight, model_1_model_Conv_12_bias)
   add_output_0004 = Add (conv_output_0012, conv_output_0013)
   relu_output_0010 = Relu (add_output_0004)
   conv_output_0014 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0010, model_1_model_Conv_13_weight, model_1_model_Conv_13_bias)
   relu_output_0011 = Relu (conv_output_0014)
   conv_output_0015 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0011, model_1_model_Conv_14_weight, model_1_model_Conv_14_bias)
   add_output_0005 = Add (conv_output_0015, relu_output_0010)
   relu_output_0012 = Relu (add_output_0005)
   conv_output_0016 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [2, 2]> (relu_output_0012, model_1_model_Conv_15_weight, model_1_model_Conv_15_bias)
   relu_output_0013 = Relu (conv_output_0016)
   conv_output_0017 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0013, model_1_model_Conv_16_weight, model_1_model_Conv_16_bias)
   conv_output_0018 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [1, 1], pads_ ints = [0, 0, 0, 0], strides_ ints = [2, 2]> (relu_output_0012, model_1_model_Conv_17_weight, model_1_model_Conv_17_bias)
   add_output_0006 = Add (conv_output_0017, conv_output_0018)
   relu_output_0014 = Relu (add_output_0006)
   conv_output_0019 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0014, model_1_model_Conv_18_weight, model_1_model_Conv_18_bias)
   relu_output_0015 = Relu (conv_output_0019)
   conv_output_0020 = Conv <dilations_ ints = [1, 1], group_ int = 1, kernel_shape_ ints = [3, 3], pads_ ints = [1, 1, 1, 1], strides_ ints = [1, 1]> (relu_output_0015, model_1_model_Conv_19_weight, model_1_model_Conv_19_bias)
   add_output_0007 = Add (conv_output_0020, relu_output_0014)
   relu_output_0016 = Relu (add_output_0007)
   globalaveragepool_output_0000 = GlobalAveragePool (relu_output_0016)
   flatten_output_0000 = Flatten <axis_ int = 1> (globalaveragepool_output_0000)
   gemm_output_0000 = Gemm <alpha_ float = 1, beta_ float = 1, transB_ int = 1> (flatten_output_0000, model_1_model_Gemm_weight, model_1_model_Gemm_bias)
   output_var = Gemm <alpha_ float = 1, beta_ float = 1, transB_ int = 1> (gemm_output_0000, model_2_model_weight, model_2_model_bias)
}
<
   ir_version: 9,
   opset_import: ["" : 17],
   producer_name: "pytorch",
   producer_version: "2.1.0"
>
main_graph (float[10,3,300,300] input_1, float[1000,2048] model_0_model_fc_weight, float[1000] model_0_model_fc_bias, float[10,1000] model_1_model_weight, float[10] model_1_model_bias, float[64,3,7,7] onnx__Conv_500, float[64] onnx__Conv_501, float[64,64,1,1] onnx__Conv_503, float[64] onnx__Conv_504, float[64,64,3,3] onnx__Conv_506, float[64] onnx__Conv_507, float[256,64,1,1] onnx__Conv_509, float[256] onnx__Conv_510, float[256,64,1,1] onnx__Conv_512, float[256] onnx__Conv_513, float[64,256,1,1] onnx__Conv_515, float[64] onnx__Conv_516, float[64,64,3,3] onnx__Conv_518, float[64] onnx__Conv_519, float[256,64,1,1] onnx__Conv_521, float[256] onnx__Conv_522, float[64,256,1,1] onnx__Conv_524, float[64] onnx__Conv_525, float[64,64,3,3] onnx__Conv_527, float[64] onnx__Conv_528, float[256,64,1,1] onnx__Conv_530, float[256] onnx__Conv_531, float[128,256,1,1] onnx__Conv_533, float[128] onnx__Conv_534, float[128,128,3,3] onnx__Conv_536, float[128] onnx__Conv_537, float[512,128,1,1] onnx__Conv_539, float[512] onnx__Conv_540, float[512,256,1,1] onnx__Conv_542, float[512] onnx__Conv_543, float[128,512,1,1] onnx__Conv_545, float[128] onnx__Conv_546, float[128,128,3,3] onnx__Conv_548, float[128] onnx__Conv_549, float[512,128,1,1] onnx__Conv_551, float[512] onnx__Conv_552, float[128,512,1,1] onnx__Conv_554, float[128] onnx__Conv_555, float[128,128,3,3] onnx__Conv_557, float[128] onnx__Conv_558, float[512,128,1,1] onnx__Conv_560, float[512] onnx__Conv_561, float[128,512,1,1] onnx__Conv_563, float[128] onnx__Conv_564, float[128,128,3,3] onnx__Conv_566, float[128] onnx__Conv_567, float[512,128,1,1] onnx__Conv_569, float[512] onnx__Conv_570, float[256,512,1,1] onnx__Conv_572, float[256] onnx__Conv_573, float[256,256,3,3] onnx__Conv_575, float[256] onnx__Conv_576, float[1024,256,1,1] onnx__Conv_578, float[1024] onnx__Conv_579, float[1024,512,1,1] onnx__Conv_581, float[1024] onnx__Conv_582, float[256,1024,1,1] onnx__Conv_584, float[256] onnx__Conv_585, float[256,256,3,3] onnx__Conv_587, float[256] onnx__Conv_588, float[1024,256,1,1] onnx__Conv_590, float[1024] onnx__Conv_591, float[256,1024,1,1] onnx__Conv_593, float[256] onnx__Conv_594, float[256,256,3,3] onnx__Conv_596, float[256] onnx__Conv_597, float[1024,256,1,1] onnx__Conv_599, float[1024] onnx__Conv_600, float[256,1024,1,1] onnx__Conv_602, float[256] onnx__Conv_603, float[256,256,3,3] onnx__Conv_605, float[256] onnx__Conv_606, float[1024,256,1,1] onnx__Conv_608, float[1024] onnx__Conv_609, float[256,1024,1,1] onnx__Conv_611, float[256] onnx__Conv_612, float[256,256,3,3] onnx__Conv_614, float[256] onnx__Conv_615, float[1024,256,1,1] onnx__Conv_617, float[1024] onnx__Conv_618, float[256,1024,1,1] onnx__Conv_620, float[256] onnx__Conv_621, float[256,256,3,3] onnx__Conv_623, float[256] onnx__Conv_624, float[1024,256,1,1] onnx__Conv_626, float[1024] onnx__Conv_627, float[512,1024,1,1] onnx__Conv_629, float[512] onnx__Conv_630, float[512,512,3,3] onnx__Conv_632, float[512] onnx__Conv_633, float[2048,512,1,1] onnx__Conv_635, float[2048] onnx__Conv_636, float[2048,1024,1,1] onnx__Conv_638, float[2048] onnx__Conv_639, float[512,2048,1,1] onnx__Conv_641, float[512] onnx__Conv_642, float[512,512,3,3] onnx__Conv_644, float[512] onnx__Conv_645, float[2048,512,1,1] onnx__Conv_647, float[2048] onnx__Conv_648, float[512,2048,1,1] onnx__Conv_650, float[512] onnx__Conv_651, float[512,512,3,3] onnx__Conv_653, float[512] onnx__Conv_654, float[2048,512,1,1] onnx__Conv_656, float[2048] onnx__Conv_657) => (float[10,10] output_var) {
   conv_output_0000 = Conv <dilations = [1, 1], group = 1, kernel_shape = [7, 7], pads = [3, 3, 3, 3], strides = [2, 2]> (input_1, onnx__Conv_500, onnx__Conv_501)
   relu_output_0000 = Relu (conv_output_0000)
   maxpool_output_0000 = MaxPool <ceil_mode = 0, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0000)
   conv_output_0001 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (maxpool_output_0000, onnx__Conv_503, onnx__Conv_504)
   relu_output_0001 = Relu (conv_output_0001)
   conv_output_0002 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0001, onnx__Conv_506, onnx__Conv_507)
   relu_output_0002 = Relu (conv_output_0002)
   conv_output_0003 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0002, onnx__Conv_509, onnx__Conv_510)
   conv_output_0004 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (maxpool_output_0000, onnx__Conv_512, onnx__Conv_513)
   add_output_0000 = Add (conv_output_0003, conv_output_0004)
   relu_output_0003 = Relu (add_output_0000)
   conv_output_0005 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0003, onnx__Conv_515, onnx__Conv_516)
   relu_output_0004 = Relu (conv_output_0005)
   conv_output_0006 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0004, onnx__Conv_518, onnx__Conv_519)
   relu_output_0005 = Relu (conv_output_0006)
   conv_output_0007 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0005, onnx__Conv_521, onnx__Conv_522)
   add_output_0001 = Add (conv_output_0007, relu_output_0003)
   relu_output_0006 = Relu (add_output_0001)
   conv_output_0008 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0006, onnx__Conv_524, onnx__Conv_525)
   relu_output_0007 = Relu (conv_output_0008)
   conv_output_0009 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0007, onnx__Conv_527, onnx__Conv_528)
   relu_output_0008 = Relu (conv_output_0009)
   conv_output_0010 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0008, onnx__Conv_530, onnx__Conv_531)
   add_output_0002 = Add (conv_output_0010, relu_output_0006)
   relu_output_0009 = Relu (add_output_0002)
   conv_output_0011 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0009, onnx__Conv_533, onnx__Conv_534)
   relu_output_0010 = Relu (conv_output_0011)
   conv_output_0012 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0010, onnx__Conv_536, onnx__Conv_537)
   relu_output_0011 = Relu (conv_output_0012)
   conv_output_0013 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0011, onnx__Conv_539, onnx__Conv_540)
   conv_output_0014 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [2, 2]> (relu_output_0009, onnx__Conv_542, onnx__Conv_543)
   add_output_0003 = Add (conv_output_0013, conv_output_0014)
   relu_output_0012 = Relu (add_output_0003)
   conv_output_0015 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0012, onnx__Conv_545, onnx__Conv_546)
   relu_output_0013 = Relu (conv_output_0015)
   conv_output_0016 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0013, onnx__Conv_548, onnx__Conv_549)
   relu_output_0014 = Relu (conv_output_0016)
   conv_output_0017 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0014, onnx__Conv_551, onnx__Conv_552)
   add_output_0004 = Add (conv_output_0017, relu_output_0012)
   relu_output_0015 = Relu (add_output_0004)
   conv_output_0018 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0015, onnx__Conv_554, onnx__Conv_555)
   relu_output_0016 = Relu (conv_output_0018)
   conv_output_0019 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0016, onnx__Conv_557, onnx__Conv_558)
   relu_output_0017 = Relu (conv_output_0019)
   conv_output_0020 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0017, onnx__Conv_560, onnx__Conv_561)
   add_output_0005 = Add (conv_output_0020, relu_output_0015)
   relu_output_0018 = Relu (add_output_0005)
   conv_output_0021 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0018, onnx__Conv_563, onnx__Conv_564)
   relu_output_0019 = Relu (conv_output_0021)
   conv_output_0022 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0019, onnx__Conv_566, onnx__Conv_567)
   relu_output_0020 = Relu (conv_output_0022)
   conv_output_0023 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0020, onnx__Conv_569, onnx__Conv_570)
   add_output_0006 = Add (conv_output_0023, relu_output_0018)
   relu_output_0021 = Relu (add_output_0006)
   conv_output_0024 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0021, onnx__Conv_572, onnx__Conv_573)
   relu_output_0022 = Relu (conv_output_0024)
   conv_output_0025 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0022, onnx__Conv_575, onnx__Conv_576)
   relu_output_0023 = Relu (conv_output_0025)
   conv_output_0026 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0023, onnx__Conv_578, onnx__Conv_579)
   conv_output_0027 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [2, 2]> (relu_output_0021, onnx__Conv_581, onnx__Conv_582)
   add_output_0007 = Add (conv_output_0026, conv_output_0027)
   relu_output_0024 = Relu (add_output_0007)
   conv_output_0028 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0024, onnx__Conv_584, onnx__Conv_585)
   relu_output_0025 = Relu (conv_output_0028)
   conv_output_0029 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0025, onnx__Conv_587, onnx__Conv_588)
   relu_output_0026 = Relu (conv_output_0029)
   conv_output_0030 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0026, onnx__Conv_590, onnx__Conv_591)
   add_output_0008 = Add (conv_output_0030, relu_output_0024)
   relu_output_0027 = Relu (add_output_0008)
   conv_output_0031 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0027, onnx__Conv_593, onnx__Conv_594)
   relu_output_0028 = Relu (conv_output_0031)
   conv_output_0032 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0028, onnx__Conv_596, onnx__Conv_597)
   relu_output_0029 = Relu (conv_output_0032)
   conv_output_0033 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0029, onnx__Conv_599, onnx__Conv_600)
   add_output_0009 = Add (conv_output_0033, relu_output_0027)
   relu_output_0030 = Relu (add_output_0009)
   conv_output_0034 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0030, onnx__Conv_602, onnx__Conv_603)
   relu_output_0031 = Relu (conv_output_0034)
   conv_output_0035 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0031, onnx__Conv_605, onnx__Conv_606)
   relu_output_0032 = Relu (conv_output_0035)
   conv_output_0036 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0032, onnx__Conv_608, onnx__Conv_609)
   add_output_0010 = Add (conv_output_0036, relu_output_0030)
   relu_output_0033 = Relu (add_output_0010)
   conv_output_0037 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0033, onnx__Conv_611, onnx__Conv_612)
   relu_output_0034 = Relu (conv_output_0037)
   conv_output_0038 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0034, onnx__Conv_614, onnx__Conv_615)
   relu_output_0035 = Relu (conv_output_0038)
   conv_output_0039 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0035, onnx__Conv_617, onnx__Conv_618)
   add_output_0011 = Add (conv_output_0039, relu_output_0033)
   relu_output_0036 = Relu (add_output_0011)
   conv_output_0040 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0036, onnx__Conv_620, onnx__Conv_621)
   relu_output_0037 = Relu (conv_output_0040)
   conv_output_0041 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0037, onnx__Conv_623, onnx__Conv_624)
   relu_output_0038 = Relu (conv_output_0041)
   conv_output_0042 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0038, onnx__Conv_626, onnx__Conv_627)
   add_output_0012 = Add (conv_output_0042, relu_output_0036)
   relu_output_0039 = Relu (add_output_0012)
   conv_output_0043 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0039, onnx__Conv_629, onnx__Conv_630)
   relu_output_0040 = Relu (conv_output_0043)
   conv_output_0044 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0040, onnx__Conv_632, onnx__Conv_633)
   relu_output_0041 = Relu (conv_output_0044)
   conv_output_0045 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0041, onnx__Conv_635, onnx__Conv_636)
   conv_output_0046 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [2, 2]> (relu_output_0039, onnx__Conv_638, onnx__Conv_639)
   add_output_0013 = Add (conv_output_0045, conv_output_0046)
   relu_output_0042 = Relu (add_output_0013)
   conv_output_0047 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0042, onnx__Conv_641, onnx__Conv_642)
   relu_output_0043 = Relu (conv_output_0047)
   conv_output_0048 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0043, onnx__Conv_644, onnx__Conv_645)
   relu_output_0044 = Relu (conv_output_0048)
   conv_output_0049 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0044, onnx__Conv_647, onnx__Conv_648)
   add_output_0014 = Add (conv_output_0049, relu_output_0042)
   relu_output_0045 = Relu (add_output_0014)
   conv_output_0050 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0045, onnx__Conv_650, onnx__Conv_651)
   relu_output_0046 = Relu (conv_output_0050)
   conv_output_0051 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0046, onnx__Conv_653, onnx__Conv_654)
   relu_output_0047 = Relu (conv_output_0051)
   conv_output_0052 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (relu_output_0047, onnx__Conv_656, onnx__Conv_657)
   add_output_0015 = Add (conv_output_0052, relu_output_0045)
   relu_output_0048 = Relu (add_output_0015)
   globalaveragepool_output_0000 = GlobalAveragePool (relu_output_0048)
   flatten_output_0000 = Flatten <axis = 1> (globalaveragepool_output_0000)
   gemm_output_0000 = Gemm <alpha = 1, beta = 1, transB = 1> (flatten_output_0000, model_0_model_fc_weight, model_0_model_fc_bias)
   output_var = Gemm <alpha = 1, beta = 1, transB = 1> (gemm_output_0000, model_1_model_weight, model_1_model_bias)
}
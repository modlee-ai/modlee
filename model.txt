<
   ir_version: 9,
   opset_import: ["" : 17],
   producer_name: "pytorch",
   producer_version: "2.2.1"
>
main_graph (float[input_1_dynamic_axes_1,3,32,32] input_1, float[3,3,1,1] model_0_model_weight, float[3] model_0_model_bias, float[1000,512] model_1_model_fc_weight, float[1000] model_1_model_fc_bias, float[10,1000] model_2_model_weight, float[10] model_2_model_bias, float[64,3,7,7] onnx__Conv_199, float[64] onnx__Conv_200, float[64,64,3,3] onnx__Conv_202, float[64] onnx__Conv_203, float[64,64,3,3] onnx__Conv_205, float[64] onnx__Conv_206, float[64,64,3,3] onnx__Conv_208, float[64] onnx__Conv_209, float[64,64,3,3] onnx__Conv_211, float[64] onnx__Conv_212, float[128,64,3,3] onnx__Conv_214, float[128] onnx__Conv_215, float[128,128,3,3] onnx__Conv_217, float[128] onnx__Conv_218, float[128,64,1,1] onnx__Conv_220, float[128] onnx__Conv_221, float[128,128,3,3] onnx__Conv_223, float[128] onnx__Conv_224, float[128,128,3,3] onnx__Conv_226, float[128] onnx__Conv_227, float[256,128,3,3] onnx__Conv_229, float[256] onnx__Conv_230, float[256,256,3,3] onnx__Conv_232, float[256] onnx__Conv_233, float[256,128,1,1] onnx__Conv_235, float[256] onnx__Conv_236, float[256,256,3,3] onnx__Conv_238, float[256] onnx__Conv_239, float[256,256,3,3] onnx__Conv_241, float[256] onnx__Conv_242, float[512,256,3,3] onnx__Conv_244, float[512] onnx__Conv_245, float[512,512,3,3] onnx__Conv_247, float[512] onnx__Conv_248, float[512,256,1,1] onnx__Conv_250, float[512] onnx__Conv_251, float[512,512,3,3] onnx__Conv_253, float[512] onnx__Conv_254, float[512,512,3,3] onnx__Conv_256, float[512] onnx__Conv_257) => (float[gemm_output_0001_dynamic_axes_1,10] output_var) {
   conv_output_0000 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]> (input_1, model_0_model_weight, model_0_model_bias)
   conv_output_0001 = Conv <dilations = [1, 1], group = 1, kernel_shape = [7, 7], pads = [3, 3, 3, 3], strides = [2, 2]> (conv_output_0000, onnx__Conv_199, onnx__Conv_200)
   relu_output_0000 = Relu (conv_output_0001)
   maxpool_output_0000 = MaxPool <ceil_mode = 0, dilations = [1, 1], kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0000)
   conv_output_0002 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (maxpool_output_0000, onnx__Conv_202, onnx__Conv_203)
   relu_output_0001 = Relu (conv_output_0002)
   conv_output_0003 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0001, onnx__Conv_205, onnx__Conv_206)
   add_output_0000 = Add (conv_output_0003, maxpool_output_0000)
   relu_output_0002 = Relu (add_output_0000)
   conv_output_0004 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0002, onnx__Conv_208, onnx__Conv_209)
   relu_output_0003 = Relu (conv_output_0004)
   conv_output_0005 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0003, onnx__Conv_211, onnx__Conv_212)
   add_output_0001 = Add (conv_output_0005, relu_output_0002)
   relu_output_0004 = Relu (add_output_0001)
   conv_output_0006 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0004, onnx__Conv_214, onnx__Conv_215)
   relu_output_0005 = Relu (conv_output_0006)
   conv_output_0007 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0005, onnx__Conv_217, onnx__Conv_218)
   conv_output_0008 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [2, 2]> (relu_output_0004, onnx__Conv_220, onnx__Conv_221)
   add_output_0002 = Add (conv_output_0007, conv_output_0008)
   relu_output_0006 = Relu (add_output_0002)
   conv_output_0009 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0006, onnx__Conv_223, onnx__Conv_224)
   relu_output_0007 = Relu (conv_output_0009)
   conv_output_0010 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0007, onnx__Conv_226, onnx__Conv_227)
   add_output_0003 = Add (conv_output_0010, relu_output_0006)
   relu_output_0008 = Relu (add_output_0003)
   conv_output_0011 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0008, onnx__Conv_229, onnx__Conv_230)
   relu_output_0009 = Relu (conv_output_0011)
   conv_output_0012 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0009, onnx__Conv_232, onnx__Conv_233)
   conv_output_0013 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [2, 2]> (relu_output_0008, onnx__Conv_235, onnx__Conv_236)
   add_output_0004 = Add (conv_output_0012, conv_output_0013)
   relu_output_0010 = Relu (add_output_0004)
   conv_output_0014 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0010, onnx__Conv_238, onnx__Conv_239)
   relu_output_0011 = Relu (conv_output_0014)
   conv_output_0015 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0011, onnx__Conv_241, onnx__Conv_242)
   add_output_0005 = Add (conv_output_0015, relu_output_0010)
   relu_output_0012 = Relu (add_output_0005)
   conv_output_0016 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [2, 2]> (relu_output_0012, onnx__Conv_244, onnx__Conv_245)
   relu_output_0013 = Relu (conv_output_0016)
   conv_output_0017 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0013, onnx__Conv_247, onnx__Conv_248)
   conv_output_0018 = Conv <dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [2, 2]> (relu_output_0012, onnx__Conv_250, onnx__Conv_251)
   add_output_0006 = Add (conv_output_0017, conv_output_0018)
   relu_output_0014 = Relu (add_output_0006)
   conv_output_0019 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0014, onnx__Conv_253, onnx__Conv_254)
   relu_output_0015 = Relu (conv_output_0019)
   conv_output_0020 = Conv <dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]> (relu_output_0015, onnx__Conv_256, onnx__Conv_257)
   add_output_0007 = Add (conv_output_0020, relu_output_0014)
   relu_output_0016 = Relu (add_output_0007)
   globalaveragepool_output_0000 = GlobalAveragePool (relu_output_0016)
   flatten_output_0000 = Flatten <axis = 1> (globalaveragepool_output_0000)
   gemm_output_0000 = Gemm <alpha = 1, beta = 1, transB = 1> (flatten_output_0000, model_1_model_fc_weight, model_1_model_fc_bias)
   output_var = Gemm <alpha = 1, beta = 1, transB = 1> (gemm_output_0000, model_2_model_weight, model_2_model_bias)
}